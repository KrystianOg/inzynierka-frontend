import{al as d,am as i}from"./index-256b35f3.js";const p=d.injectEndpoints({endpoints:r=>({getTemplates:r.query({queryFn:async()=>{const{data:t,error:e}=await i.from("templates").select();return t?{data:t}:{error:e}}}),createTemplate:r.mutation({queryFn:async t=>{const{error:e,status:a}=await i.from("templates").insert([t]);return e?{error:e}:{data:a}}}),updateTemplate:r.mutation({queryFn:async({id:t,...e})=>{const{error:a,status:s}=await i.from("templates").update(e).eq("id",t);return a?{error:a}:{data:s}},onQueryStarted({id:t,...e},{dispatch:a,queryFulfilled:s}){const u=a(p.util.updateQueryData("getTemplates",void 0,n=>{const o=n.findIndex(m=>m.id===t);o!==-1&&Object.assign(n[o],e)}));s.catch(u.undo)},invalidatesTags:["Template"]}),deleteTemplate:r.mutation({queryFn:async t=>{const{error:e,status:a}=await i.from("templates").delete().eq("id",t);return e?{error:e}:{data:a}},onQueryStarted(t,{dispatch:e,queryFulfilled:a}){const s=e(p.util.updateQueryData("getTemplates",void 0,u=>{const n=u.findIndex(o=>o.id===t);n!==-1&&u.splice(n,1)}));a.catch(s.undo)},invalidatesTags:["Template"]})})}),{useGetTemplatesQuery:c,useCreateTemplateMutation:y,useUpdateTemplateMutation:T,useDeleteTemplateMutation:f}=p;export{y as a,c as u};
